import asyncio
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append('/app/src')

from api.basketball_api import BasketballAPI

async def test_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ Docker"""
    api_key = os.getenv("BASKETBALL_API_KEY")
    
    if not api_key:
        print("‚ùå BASKETBALL_API_KEY not found in environment variables")
        print("üí° Make sure config/.env file exists and contains BASKETBALL_API_KEY")
        return
    
    api = BasketballAPI(api_key)
    
    try:
        print("üîå Testing API connection from Docker...")
        connection_ok = await api.test_connection()
        
        if connection_ok:
            print("‚úÖ API connection successful from Docker!")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
            print("üèÄ Fetching leagues...")
            leagues = await api.get_leagues()
            if leagues:
                leagues_count = len(leagues.get('response', []))
                print(f"‚úÖ Found {leagues_count} leagues")
                
            print("üìÖ Fetching recent games...")
            games = await api.get_games(league="12", season="2024-2025")
            if games:
                games_data = games.get('response', [])
                print(f"‚úÖ Found {len(games_data)} games")
                if games_data:
                    for game in games_data[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –º–∞—Ç—á–∞
                        home_team = game.get('teams', {}).get('home', {}).get('name', 'Unknown')
                        away_team = game.get('teams', {}).get('away', {}).get('name', 'Unknown')
                        print(f"   üèÜ {home_team} vs {away_team}")
        else:
            print("‚ùå API connection failed from Docker")
            
    except Exception as e:
        print(f"üí• Error during Docker testing: {e}")
    finally:
        await api.close()

if __name__ == "__main__":
    asyncio.run(test_api())